CC=gcc

# This is used to combine .c and .cpp sources on the OBJS line
CCPP_LIBS=-lstdc++

# Comment to keep the Shell window (useful to view logging)
#
# NOTE: -mwindows makes it detach from the console.
#       This is good for gui apps but bad if launched from dos
#       because we lose stdin.
noshell=-mwindows

# Comment these out to disable PNG output if no PNG lib is available.
#
# Devcpp has static packages for libpng, libz, and glut so use them.  Need -lgdi though.
#PNG_FLAGS=-DUSE_PNG -I./win
#PNG_LIBS=-L./win -lpng -lz
#
PNG_FLAGS=-DUSE_PNG
PNG_LIBS=-static -lpng -lz

# Comment these out to disable tile rendering option.
#
TR_FLAGS=-DTILE_RENDER_OPTION
TR_SRC=tr.c

# UnComment this to build in support for Mesa Offscreen rendering
OFFSCREEN_FLAGS=-DWIN_DIB_OPTION
OFFSCREEN_LIBS= -lgdi32

# Comment these out to disable the test GUI made with MUI.
#
# Define both MUI and GLUT to access the MUI GUI via the GLUT menu.
#GUI_FLAGS=-DTEST_MUI_GUI -I./mui/include -DUSE_GLUT_MENUS
GUI_FLAGS=-DTEST_MUI_GUI -I./mui/include
GUI_SRC=ldglgui.c mui/lib/mui/gizmo.c mui/lib/mui/glutmui.c mui/lib/mui/displaylist.c mui/lib/mui/uicolor.c mui/lib/mui/miscui.c mui/lib/mui/mui.c mui/lib/mui/vslider.c mui/lib/mui/textlist.c mui/lib/mui/button.c mui/lib/mui/pulldown.c mui/lib/mui/hslider.c
#GUI_LIBS=-L./mui/lib/mui -lfreeglutmui
FREEGLUT_STATIC_LIBS=-L./freeglut/lib -lfreeglut_static  
#LIBS = libfreeglutmui.a

RES_SRC=ldglite.rc

# release mode
CFLAGS=-DUSING_FREEGLUT -DFREEGLUT_STATIC -DUSE_OPENGL -DUSE_L3_PARSER -DUSE_BMP8 $(PNG_FLAGS) $(TR_FLAGS) $(OFFSCREEN_FLAGS) $(GUI_FLAGS) 
# debug mode
#CFLAGS=-ggdb -DUSING_FREEGLUT -DFREEGLUT_STATIC -DUSE_OPENGL -DUSE_L3_PARSER -DUSE_BMP8 $(PNG_FLAGS) $(TR_FLAGS) $(OFFSCREEN_FLAGS) $(GUI_FLAGS)
# -mwindows = remove the Shell window (useful to view logging however)
#CFLAGS=-ggdb -DUSING_FREEGLUT -DFREEGLUT_STATIC -DUSE_OPENGL -DUSE_L3_PARSER -DUSE_BMP8 $(PNG_FLAGS) $(TR_FLAGS) $(OFFSCREEN_FLAGS) $(GUI_FLAGS) $(noshell)

RM_F = rm -f

SRCS = ldliteVR_main.c platform.c dirscan.c gleps.c camera.c f00QuatC.c quant.c stub.c lcolors.c y.tab.c lex.yy.c qbuf.c main.c ldglpr.c L3Edit.c L3Math.cpp L3Input.cpp L3View.cpp hoser.c ldglmenu.c plugins.c $(TR_SRC) $(GUI_SRC) $(CCPP_LIBS)
OBJS = $(SRCS:.c=.o) $(RES_SRC:.rc=.o) 

all	: ldglite

ldglite: $(OBJS) $(LIBS) pluginldlist.dll
	$(CC) $(CFLAGS) $(OBJS) -o ldglite.exe -I. $(FREEGLUT_STATIC_LIBS) $(PNG_LIBS) $(OFFSCREEN_LIBS) $(GUI_LIBS) -lglu32 -lopengl32 -lwinmm -lgdi32 
	cp ldglite.exe l3glite.exe
	cp ldglite.exe l3gledit.exe
	cp ldglite.exe release/ldglite.exe
	cp l3glite.exe release/l3glite.exe
	cp l3gledit.exe release/l3gledit.exe
	cp plugins/pluginldlist.dll release/plugins/pluginldlist.dll

libfreeglutmui.a:
	if [ -d mui/lib/mui ] ; then cd mui/lib/mui ; $(MAKE) -f Makefile $@ ; fi

pluginldlist.dll:
	if [ -d plugins ] ; then cd plugins ; $(MAKE) -f Makefile $@ ; fi
	
l3glite:   ldglite

ldglitepng:   ldglite

l3glitepng:   ldglite

ldglite.o: ldglite.rc
	windres -i ldglite.rc -o ldglite.o

clean:
	$(RM_F) *.o
	$(RM_F) release/*.exe
	$(RM_F) release/pluginldlist.dll
	if [ -d mui/lib/mui ] ; then cd mui/lib/mui ; $(MAKE) clean -f Makefile $@ ; fi
	if [ -d plugins ] ; then cd plugins ; $(MAKE) clean -f Makefile $@ ; fi

